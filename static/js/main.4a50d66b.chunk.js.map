{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/NavBar/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Wrapper","children","Title","NavBar","href","title","result","currentScore","topScore","App","state","friends","clicked","handleScore","newScore","_this","setState","handleFriends","randomFriends","array","i","length","j","Math","floor","random","_ref","randomizeFriends","currentClicked","indexOf","push","_this2","this","components_Wrapper","components_NavBar","components_Title","map","friend","components_FriendCard","loadFriends","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"kzEAaeA,MAVf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAOL,EAAMM,GAAIC,QAAS,kBAAKP,EAAMQ,YAAYR,EAAMM,MAC3EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCA1BC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCG1BC,MAJf,SAAef,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMc,WCevBE,SAhBA,SAAAhB,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,KAAGc,KAAK,iBAAiBjB,EAAMkB,QAGjCjB,EAAAC,EAAAC,cAAA,MAAIG,GAAG,UAAUN,EAAMmB,QAEvBlB,EAAAC,EAAAC,cAAA,MAAIG,GAAG,iBAAP,kBAAuCN,EAAMoB,cAE7CnB,EAAAC,EAAAC,cAAA,MAAIG,GAAG,aAAP,cAA+BN,EAAMqB,yBCsG5BC,6MAlGbC,MAAQ,CACNC,UACAJ,aAAc,EACdC,SAAU,EACVF,OAAQ,GACRM,QAAS,MAGXC,YAAc,SAAApB,GAGZ,IAAMqB,EAAWC,EAAKL,MAAMH,aAAe,EAE3CQ,EAAKC,SAAS,CACZT,aAAcO,IAIZA,EAAWC,EAAKL,MAAMF,UACxBO,EAAKC,SAAS,CAACR,SAAUM,OAI7BG,cAAgB,WAEd,IAAIC,EApCR,SAA0BC,GACxB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAK3C,OAAOP,EA8BeQ,CAAiBhB,GACrCI,EAAKC,SAAS,CAAEL,QAASO,OAG3BvB,YAAc,SAAAF,GAEZ,IAAImC,EAAiBb,EAAKL,MAAME,QAGhC,IAAoC,IAAhCgB,EAAeC,QAAQpC,GAAW,CAElCmC,EAAeE,KAAKrC,GAGpBsB,EAAKF,cAEL,IAAIP,EAAS,GAETA,EAD0B,KAA1BsB,EAAeP,OACN,2BAEA,yBAGbN,EAAKC,SAAS,CACZV,OAAQA,EACRM,QAASgB,IAIXb,EAAKE,qBAKLF,EAAKC,SAAS,CACZT,aAAc,EACdD,OAAQ,2BACRM,QAAS,8EAQR,IAAAmB,EAAAC,KACP,OACE5C,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAD,CACA7B,MAAM,8BACNE,aAAcyB,KAAKtB,MAAMH,aACzBC,SAAUwB,KAAKtB,MAAMF,SACrBF,OAAQ0B,KAAKtB,MAAMJ,SAEnBlB,EAAAC,EAAAC,cAAC6C,EAAD,iFAECH,KAAKtB,MAAMC,QAAQyB,IAAI,SAAAC,GAAM,OAC5BjD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,YAAaR,EAAKQ,YAClB5C,YAAaoC,EAAKpC,YAClBsB,cAAec,EAAKd,cACpBxB,GAAI4C,EAAO5C,GACX+C,IAAKH,EAAO5C,GACZI,KAAMwC,EAAOxC,KACbE,MAAOsC,EAAOtC,MACda,QAASyB,EAAOzB,oBA5FV6B,mBCXlBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4a50d66b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\" value={props.id} onClick={()=> props.handleClick(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h2 className=\"title\">{props.children}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst NavBar = props => (\r\n  <nav>\r\n    <ul>\r\n      <li className=\"brand\">\r\n        <a href=\"/clicky-game/\">{props.title}</a>\r\n      </li>\r\n\r\n      <li id=\"result\">{props.result}</li>\r\n\r\n      <li id=\"current-score\">Current Score: {props.currentScore}</li>\r\n\r\n      <li id=\"top-score\">Top Score: {props.topScore}</li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport friends from \"./friends.json\";\r\n\r\nfunction randomizeFriends(array){\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    currentScore: 0,\r\n    topScore: 0,\r\n    result: \"\",\r\n    clicked: []\r\n  };\r\n\r\n  handleScore = id => {\r\n    // Increase the current score by 1 \r\n    // Had to use variable because the state was not getting updated immediately\r\n    const newScore = this.state.currentScore + 1\r\n\r\n    this.setState({\r\n      currentScore: newScore\r\n    })\r\n  \r\n    // If current score is greater than top score, set the top score to the newScore\r\n    if (newScore > this.state.topScore) {\r\n      this.setState({topScore: newScore})\r\n    }\r\n  }\r\n\r\n  handleFriends = () => {\r\n    // load friends in a different order every time the user clicks a friend.\r\n    let randomFriends = randomizeFriends(friends)\r\n    this.setState({ friends: randomFriends})\r\n  }\r\n\r\n  handleClick = id => {\r\n\r\n    let currentClicked = this.state.clicked\r\n\r\n    // If result is good (new click)\r\n    if (currentClicked.indexOf(id) === -1){\r\n        // update state clicked array\r\n        currentClicked.push(id)\r\n\r\n        // increase the score\r\n        this.handleScore()\r\n\r\n        let result = \"\"\r\n        if (currentClicked.length === 12) {\r\n            result = \"You won the iron throne!\"\r\n        } else {\r\n            result = \"You guessed correctly!\"\r\n        }\r\n\r\n        this.setState({ \r\n          result: result,\r\n          clicked: currentClicked\r\n        });\r\n\r\n        // reload the cards in a different order \r\n        this.handleFriends() \r\n\r\n    } else {\r\n    // If result is bad (re-click)\r\n        // clear current score and restart the game \r\n        this.setState({\r\n          currentScore: 0,\r\n          result: \"You guessed incorrectly!\",\r\n          clicked: []\r\n        })\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <NavBar \r\n        title=\"Game of Thrones Clicky Game\"\r\n        currentScore={this.state.currentScore}\r\n        topScore={this.state.topScore}\r\n        result={this.state.result}>\r\n        </NavBar>\r\n        <Title>Click on an image to earn points, but don't click on any more than once!</Title>\r\n\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            loadFriends={this.loadFriends}\r\n            handleClick={this.handleClick}\r\n            handleFriends={this.handleFriends}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n            clicked={friend.clicked}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}